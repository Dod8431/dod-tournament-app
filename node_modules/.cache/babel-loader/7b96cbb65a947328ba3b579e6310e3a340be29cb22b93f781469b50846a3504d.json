{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doria\\\\dod-tournament-app\\\\src\\\\components\\\\RecapScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getTournament } from '../firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeClasses = {\n  classic: \"bg-gradient-to-br from-blue-100 to-indigo-200\",\n  retro: \"bg-yellow-200 text-pink-700 font-mono\",\n  meme: \"bg-green-200 text-purple-900 font-bold\",\n  dark: \"bg-gray-900 text-white\",\n  light: \"bg-white text-black\"\n};\nfunction RecapScreen() {\n  _s();\n  const {\n    tid\n  } = useParams();\n  const [tournament, setTournament] = useState(null);\n  const [myVotes, setMyVotes] = useState(null);\n  const [error, setError] = useState(\"\");\n  let user = null;\n  try {\n    user = JSON.parse(localStorage.getItem(`tourn_${tid}_user`));\n  } catch (e) {\n    user = null;\n  }\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!tid) {\n      setError(\"Invalid tournament ID.\");\n      return;\n    }\n    getTournament(tid).then(data => {\n      setTournament(data);\n      if (!user) {\n        setMyVotes([]);\n        return;\n      }\n      const my = (data.votes || []).filter(v => v.userId === user.userId && v.roundNum === data.currentRound);\n      setMyVotes(my);\n    }).catch(e => {\n      setError(\"Error loading tournament data.\");\n    });\n  }, [tid]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen text-red-700\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  if (!tournament || !myVotes) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 39\n  }, this);\n  const mainClass = `${themeClasses[tournament.theme] || themeClasses.classic} min-h-screen flex flex-col items-center justify-center p-4`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mainClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-2xl shadow-xl max-w-2xl w-full flex flex-col gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-2\",\n        children: [\"Your Votes for Round \", tournament.currentRound]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), myVotes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"No votes yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"flex flex-col gap-3\",\n        children: myVotes.map((v, i) => {\n          var _tournament$bracket$f;\n          const match = (((_tournament$bracket$f = tournament.bracket.find(r => r.round === tournament.currentRound)) === null || _tournament$bracket$f === void 0 ? void 0 : _tournament$bracket$f.matches) || []).find(m => m.id === v.matchId);\n          const votedVid = tournament.videos.find(x => x.id === v.votedFor);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"bg-gray-100 rounded-xl p-3 flex gap-4 items-center\",\n            children: [votedVid ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"140\",\n              height: \"80\",\n              src: `https://www.youtube.com/embed/${votedVid.ytId}`,\n              title: votedVid.title || \"YouTube video\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true,\n              className: \"rounded-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-[140px] h-[80px] bg-gray-300 rounded-xl flex items-center justify-center text-xs text-gray-500\",\n              children: \"No video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold text-base\",\n              children: [\"Voted: \", votedVid !== null && votedVid !== void 0 && votedVid.title ? votedVid.title : \"Unknown\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(RecapScreen, \"RrmxaeaWaIlyaa/DTj1bX4buM0Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RecapScreen;\nexport default RecapScreen;\nvar _c;\n$RefreshReg$(_c, \"RecapScreen\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","getTournament","jsxDEV","_jsxDEV","themeClasses","classic","retro","meme","dark","light","RecapScreen","_s","tid","tournament","setTournament","myVotes","setMyVotes","error","setError","user","JSON","parse","localStorage","getItem","e","navigate","then","data","my","votes","filter","v","userId","roundNum","currentRound","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mainClass","theme","length","map","i","_tournament$bracket$f","match","bracket","find","r","round","matches","m","id","matchId","votedVid","videos","x","votedFor","width","height","src","ytId","title","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/doria/dod-tournament-app/src/components/RecapScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { getTournament } from '../firebase/firestore';\r\n\r\nconst themeClasses = {\r\n  classic: \"bg-gradient-to-br from-blue-100 to-indigo-200\",\r\n  retro: \"bg-yellow-200 text-pink-700 font-mono\",\r\n  meme: \"bg-green-200 text-purple-900 font-bold\",\r\n  dark: \"bg-gray-900 text-white\",\r\n  light: \"bg-white text-black\"\r\n};\r\n\r\nfunction RecapScreen() {\r\n  const { tid } = useParams();\r\n  const [tournament, setTournament] = useState(null);\r\n  const [myVotes, setMyVotes] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  let user = null;\r\n  try {\r\n    user = JSON.parse(localStorage.getItem(`tourn_${tid}_user`));\r\n  } catch (e) {\r\n    user = null;\r\n  }\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!tid) {\r\n      setError(\"Invalid tournament ID.\");\r\n      return;\r\n    }\r\n    getTournament(tid).then(data => {\r\n      setTournament(data);\r\n      if (!user) {\r\n        setMyVotes([]);\r\n        return;\r\n      }\r\n      const my = (data.votes || []).filter(\r\n        v => v.userId === user.userId && v.roundNum === data.currentRound\r\n      );\r\n      setMyVotes(my);\r\n    }).catch(e => {\r\n      setError(\"Error loading tournament data.\");\r\n    });\r\n  }, [tid]);\r\n\r\n  if (error) return <div className=\"flex justify-center items-center min-h-screen text-red-700\">{error}</div>;\r\n  if (!tournament || !myVotes) return <div className=\"flex justify-center items-center min-h-screen\">Loading...</div>;\r\n\r\n  const mainClass = `${themeClasses[tournament.theme] || themeClasses.classic} min-h-screen flex flex-col items-center justify-center p-4`;\r\n\r\n  return (\r\n    <div className={mainClass}>\r\n      <div className=\"bg-white p-6 rounded-2xl shadow-xl max-w-2xl w-full flex flex-col gap-2\">\r\n        <h2 className=\"text-2xl font-bold mb-2\">Your Votes for Round {tournament.currentRound}</h2>\r\n        {myVotes.length === 0 ? (\r\n          <div className=\"text-gray-500\">No votes yet!</div>\r\n        ) : (\r\n          <ul className=\"flex flex-col gap-3\">\r\n            {myVotes.map((v, i) => {\r\n              const match = (tournament.bracket.find(r => r.round === tournament.currentRound)?.matches || []).find(m => m.id === v.matchId);\r\n              const votedVid = tournament.videos.find(x => x.id === v.votedFor);\r\n              return (\r\n                <li className=\"bg-gray-100 rounded-xl p-3 flex gap-4 items-center\" key={i}>\r\n                  {votedVid ? (\r\n                    <iframe\r\n                      width=\"140\"\r\n                      height=\"80\"\r\n                      src={`https://www.youtube.com/embed/${votedVid.ytId}`}\r\n                      title={votedVid.title || \"YouTube video\"}\r\n                      frameBorder=\"0\"\r\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowFullScreen\r\n                      className=\"rounded-xl\"\r\n                    ></iframe>\r\n                  ) : (\r\n                    <div className=\"w-[140px] h-[80px] bg-gray-300 rounded-xl flex items-center justify-center text-xs text-gray-500\">\r\n                      No video\r\n                    </div>\r\n                  )}\r\n                  <span className=\"font-semibold text-base\">\r\n                    Voted: {votedVid?.title ? votedVid.title : \"Unknown\"}\r\n                  </span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n        {/* Removed Back to Voting button as requested */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecapScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}